---
- name: Wait for up to 10m for the Grafana operator to be available
  ansible.builtin.command:
    cmd: oc -n {{ grafana_namespace }} get pod --selector=control-plane=controller-manager -o jsonpath='{.items[0].status.phase}'
  register: pod_state
  until: pod_state.stdout == "Running"
  retries: 120
  delay: 5
  when: not deploy_local

- name: Deploying Grafana
  ansible.builtin.command:
    cmd: oc apply -f -
    stdin: "{{ lookup('template', 'grafana.j2') }}"
  when: not deploy_local

- name: Wait up to 10m for the external route to appear
  ansible.builtin.command:
    cmd: oc -n {{ grafana_namespace }} get route/grafana-route -o json
  register: route
  retries: 120
  delay: 5
  until: route.rc == 0
  when: not deploy_local

- name: Parse the route output
  ansible.builtin.set_fact:
    route_json: "{{ route.stdout|from_json}}"
  when: not deploy_local and route.rc == 0

- name: Set the Grafana route URL
  ansible.builtin.set_fact:
    grafana_route: https://{{ route_json.spec.host }}
  when: not deploy_local and route.rc == 0

- name: Wait for up to 10m for Grafana to be accessible
  ansible.builtin.uri:
    url: "{{ grafana_route }}/api/health"
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    method: GET
    validate_certs: false
    force_basic_auth: true
  register: grafana_health
  retries: 120
  delay: 5
  until: grafana_health.status == 200

- name: Add datasource
  ansible.builtin.uri:
    url: "{{ grafana_route }}/api/datasources"
    method: POST
    validate_certs: false
    force_basic_auth: true
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    body_format: json
    body: >
      {
        "name": "Prometheus",
        "type": "prometheus",
        "url": "{{ prometheus_route }}",
        "access": "proxy",
        "basicAuth": false
      }
  when: deploy_local

- name: Record the grafana login credentials, locally
  ansible.builtin.template:
    src: ../templates/credentials.j2
    dest: ~/odf-grafana-credentials
    mode: "0600"
